# transport = {
#     'AA1111AA': 'Іванов Іван',
#     'IVANOV'  : 'Іванов Іван',
#     'AA0007AA': 'Семенов Андрій',
#     'AA007AA' : 'Іванов Іван',
#     'AВ1111AВ': 'Вінниця Водоканал',
#     'AІ1010КК': 'Семенов Андрій',
# }
















# Оголосити словник, що має наступну структуру «ключ» — номерний знак транспортного засобу
# (наприклад «АА2565ІН»), значення «власник авто» (наприклад, Іванов Іван)
# Додати в словник два нові авто
# Знайти власника за номером автомобіля
# Обійти словник і вивести прізвища людей, які мають більше одного авто

from pprint import pprint


transport = {
    'AA1111AA': 'Іванов Іван',
    'IVANOV'  : 'Іванов Іван',
    'AA0007AA': 'Семенов Андрій',
    'AA007AA' : 'Іванов Іван',
    'AВ1111AВ': 'Вінниця Водоканал',
    'AІ1010КК': 'Семенов Андрій',
    'AB0212KK': 'Семенов Андрій',
}

# transport["BH1560EP"] = "Федір Лозовський"



# transport_2 = {
#     "EE3322PP": "Одеса Водоканал",
#     "RR8799": "Укртелеком"
# }

# transport.update(transport_2)
# # pprint(transport, indent=10)

# # for number, name in transport.items():
# #     print(f"Номерний знак: {number} - Власник: {name}")

# number = "RR8799"
# name = transport.get(number)
# # pprint(f"За номером '{number}' знайдено власника: {name}", width=30)

# count = {"Ivan": 1}

# for name in transport.values():
#     count[name] = count.get(name, 0) + 1

# for name, i in count.items():
#     if i > 1:
#         print(name)


# Створіть словник “stock”, який міститиме в собі ключ — назва товару,
# значення — кількість товару на складі.
# Написати програму, яка запитує який товар та кількість, яку хоче купити користувач.
# Вивести на екран True, якщо користувач може купити цей товар, якщо ні — False.

stock = {
    "Хліб": 20,
    "Картопля": 50,
    "Масло": 5,
    "Какао": 3
}











# Створіть словник, який містить дані про користувачів вашого веб-сайту.
# Ключами в цьому словнику будуть імена користувачів, а значеннями — інформація про користувачів.
# Попросіть користувача ввести імена користувачів, про яких хоче дізнатися інформацію, через пробіл.
# Вивести інформацію про цих користувачів у форматі (Ім’я, вік, стать, електронна пошта).

users = {
    "Алекс": {
        "username": "alex",
        "age": 20,
        "city": "Київ",
        "sex": "male"
    },
    "Дмитро": {
        "username": "dima",
        "age": 15,
        "city": "Одеса",
        "e-mail": "dima@gmail.com"
    },
    "Владислав": {
        "username": "vlad",
        "age": 14,
    },
}









# Дано словник, який містить «Прізвище»-«оцінка».
# На його основі створити новий словник, який буде містити лише учнів, які навчаються на 4 та 5.
# from pprint import pprint

# students = {
#     "Артем": 5,
#     "Владислав": 5,
#     "Микола": 5,
#     "Алекс": 2,
#     "Тетяна":4
# }











# Погода. У словнику збережено інформацію про температуру в різних містах: ключами є назви міст,
# значеннями - температура. Розрахуйте середню температуру за вказаними містами

# temperatures = {
    # "Київ" : 36,
    # "Львів" : 32,
    # "Черкаси" : 30,
    # "Одеса" : 33
# }








# Створіть словник, який містить ключ — ім’я студента, значення — список із балами.
# Попросіть користувача ввести ім’я студента.
# Порахувати середній бал студента, ім’я якого ввів користувач.

# students = {"коля" : [3, 5, 4, 5, 5, 4, 4],
#             "василь" : [3, 2, 2, 1, 2, 3, 2],
#             "петро" : [5, 5, 5, 5, 5, 4, 5],
#             "олег" : [3, 3, 3, 2, 4, 4, 3],
#             "ігорь" : [4, 5, 4, 5, 5, 5, 4]
# }










# Створіть словник, який містить ключ — ім’я студента, значення — список із балами.
# Напишіть програму, яка порахує середній бал усіх учнів та виведе його на екран.

# students = {"коля" : [3, 5, 4, 5, 5, 4, 4],
#             "василь" : [3, 2, 2, 1, 2, 3, 2],
#             "петро" : [5, 5, 5, 5, 5, 4, 5],
#             "олег" : [3, 3, 3, 2, 4, 4, 3],
#             "ігорь" : [4, 5, 4, 5, 5, 5, 4]
# }










# Напишіть програму, яка дозволяє користувачу зберігати інформацію про товари у словник.
# Ключ — назва товару, а значення — ціна та кількість одиниць на складі.
# Програма повинна мати наступні опції: ✅ Додати новий товар ✅ Видалити товар
# ✅ Змінити ціну або кількість товару ✅ Переглянути список всіх товарів та їх характеристик












# Створіть словник, який містить ключ — назва книги, значення — кількість сторінок у ній.
# Напишіть програму, яка виводить на екран книгу з найбільшою кількістю сторінок.
# Вивести на екран книгу з найменшою кількістю сторінок.
# Порахувати середнє значення сторінок у всіх книгах.
# books = {
#     "Гарі Потер-1": 150,
#     "Гарі Потер-2": 125,
#     "Гарі Потер-3": 170,
#     "Гарі Потер-4": 200
# }






# Потрібно підсумувати числа, виключивши будь-які цифри, які є частиною слова.
# Текст складається з чисел, пробілів та літер з англійського алфавіту.
# my_string = "This picture is an oil on canvas painting 5 by Danish artist Anna Petersen between a1845 and 1910 year"










# Створіть словник, який містить дані про ціни на різні товари у різних магазинах.
# Ключами в цьому словнику будуть назви товарів, а значеннями — словники з назвами магазинів та цінами на ці товари у цих магазинах.
# prices = {
#     "яблоко": {"магазин_1": 2.5, "магазин_2": 2.3, "магазин_3": 2.2},
#     "банан": {"магазин_1": 1.5, "магазин_2": 1.3, "магазин_3": 1.2},
#     "апельсин": {"магазин_1": 3, "магазин_2": 2.9, "магазин_3": 3.2},
# }








# Посортувати за спаданням ціни

# products = [
#     {"name": "bread", "price": 100},
#     {"name": "wine", "price": 138},
#     {"name": "meat", "price": 15},
#     {"name": "water", "price": 1},
# ]









# Напишіть програму, яка питає у користувача, що він хоче купити.
# Вивести на екран номер магазину, в якому можна купити:
# ✅ найдешевше
# ✅ найдорожче










# Порахувати кількість входження слів у речені за записати їх у словник {"що", 3}
# my_string = "Напишіть програму, яка питає у користувача, що він хоче купити. Вивести на екран номер магазину, в якому можна купити"










# Порахувати середню ціну по всіх магазинах.











# Ваша задача - знайти кут підйому сонця над горизонтом, знаючи час доби.
# Вхідні дані: сонце сходить на сході о 6:00 ранку, що відповідає куту 0 градусів.
# О 12:00 дня сонце досягає зеніту, що означає, що кут дорівнює 90 градусів. 18:00 - час заходу сонця,
# тому кут дорівнює 180 градусам.
# Якщо на вхід буде подано час ночі (до 6:00 ранку або після 6:00 вечора),
# ваша програма повинна повернути - "I don't see the sun!".