# empty_dict = dict()
# print(type(empty_dict))
# my_set = {1,}
# print(type(empty_dict))

# my_dict = {"first_name": "alex", "last_name": "kondr"}
# # print(len(my_dict))

# # print(my_dict["name"])

# name = my_dict.get("name", 789)
# print(f"{name = }")


month = {
    1: "Січень",
    2: "Лютий",
    3: "Березень"
}

# new_month = month.copy()
# new_month[5] = "Травень"
# print(f"{new_month = }")
# print(f"{month = }")

# month.clear()
# print(month)

# get_month = month.pop(2)
# print(get_month)
# print(month)

# del month[9]
# print(month)

# month[4] = "Квітень"
# month[7] = "Липень"

# print(month)

# # month[3] = "Грудень"


# new_month = {2: "Квітень", 7: "Липень"}

# month.update(new_month)
# print(month)

# now_month = month.get(5, "Назва місяці з таким номером ще не записана")
# print(now_month)





# Створити словник з назвами кольорів та їх RGB кодами у форматі (R, G, B).
# Запитати у користувача назву кольору.
# Вивести на екран RGB код введеного користувачем кольору. Інакше - вивести “Колір не знайдено”.

# (255, 45, 8)





# Створіть словник з переліком фруктів та їх калорійністю.
# Виведіть на екран калорійність вашого улюбленого фрукту.

# fruits = {
#     "Яблоко": 100,
#     "Банан": 213,
#     "Ананас": 421
# }

# fruit = input("Введіть назву фрукту, калорійність якого Ви хочете дізнатись: ")
# calory = fruits.get(fruit, "Такий фрукт не знайдено")
# print(calory)




# Створіть словник з іменами та віком декількох людей.
# Виведіть на екран найстаршу людину.

# people = {
#     "Алекс": 44,
#     "Влад": 14,
#     "Артем": 13,
#     "Микола": 14
# }

# find_name = ""
# max_age = 100

# for name in people:
# for name in people.keys():
# for age in people.values():

# for name, age in people.items():
#     if age < max_age:
#         find_name = name
#         max_age = age

# print(f"Людина з ім'ям '{find_name}' наймолодша та її вік {max_age} р.")




# Створіть список з чисел від 1 до 10 та використайте зрізи для виводу елементів від другого до п'ятого включно.

# numbers = list(range(1, 11))
# print(numbers[1:5])






# Створіть рядок та використайте зрізи для виводу перших трьох та останніх трьох символів.











# Створіть словник з назвами міст та їх кількістю населення.
# Виведіть на екран назву міста з найбільшою кількістю населення.
# cities = {'Київ': 2.884,'Харків': 1.419, 'Одеса': 1.010, 'Дніпро': 0.968, 'Львів': 0.717}
# count = sum(cities.values())
# print(count)

# avg = sum(cities.values()) / len(cities)
# print(f"{avg}")


# Напишіть програму, яка об'єднує два словники в один.
# Ключі та значення в обох словниках повинні бути різними.
# cities_1 = {'Київ': 2.884,'Харків': 1.419, 'Одеса': 1.010}
# cities_2 = {'Дніпро': 0.968, 'Львів': 0.717}

# cities_1.update(cities_2)
# print(cities_1)




# Створіть список зі стрічок та використайте зрізи для виводу останніх трьох символів з кожної стрічки.







# Напишіть програму, яка дозволяє користувачам реєструватися на сайті та зберігає їх дані у словнику.
# Ключ — ім'я користувача, а значення — пароль.









# Перетворення рядка у словник. Напишіть програму, яка перетворює рядок у словник,
# де ключ — перша буква слова, а значення — саме слово.
# Рядок вводиться користувачем з клавіатури.






# Створіть програму, яка приймає від користувача дві строки та перевіряє,
# чи є вони анаграмами (слова, у яких ті самі літери, але в різному порядку).
# Виведіть результат у вигляді логічного значення (True або False).








# Створіть список зі стрічок та використайте зрізи для виводу символів з кожної стрічки у зворотньому порядку.












# Гра "Вгадай слово".
# У цій грі комп'ютер загадує слово, а користувач повинен відгадати його, отримуючи на кожну спробу підказку від програми.
# Наприклад, на першій спробі програма може вивести довжину слова, на другій — першу букву слова, на третій — останню букву і т.д.










# Створіть програму, яка приймає рядок, та повертає рядок, з якого було видалено всі пробіли.








# Напишіть програму, яка приймає від користувача список з імен та оцінок, та обчислює середній бал для кожного учня.
# Результат виводиться у вигляді словника, де ключ — ім'я учня, а значення — середній бал.







# Створіть множину та перевірте, чи є вона підмножиною іншої множини.







# Напишіть програму, яка дозволяє користувачу зберігати інформацію про товари у словник.
# Ключ — назва товару, а значення — ціна та кількість одиниць на складі.
# Програма повинна мати наступні опції: ✅ Додати новий товар ✅ Видалити товар
# ✅ Змінити ціну або кількість товару ✅ Переглянути список всіх товарів та їх характеристик
