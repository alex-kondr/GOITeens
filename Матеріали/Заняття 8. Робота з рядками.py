# Створіть програму, яка приймає від користувача дві строки та перетворює їх у список,
# де перший елемент — це перша літера першої строки, другий елемент — друга літера першої строки,
# третій елемент — перша літера другої строки, четвертий — друга літера другої строки і т.д.
# Виведіть цей список.
# first_string = "Привіт. Я з Одеси"
# second_string = "Будемо знайомі"

# my_list = []
# for i in range(0, len(first_string), 2):
#     if i < len(second_string):
#         my_list.extend([first_string[i], first_string[i+1], second_string[i], second_string[i+1]])

# print(my_list)


# Створіть програму, яка приймає від користувача два рядки та виводить повідомлення, де більше символів.



# Написати програму, яка зчитає 3 числа (a, b, c) та порахує скільки чисел лежить між “a” i “b”, які діляться на “с”
# a = 5
# b = 4793
# c = 7



# Створіть програму, яка приймає від користувача дві строки та порівнює їх лексикографічно (за алфавітом).
# Виведіть результат порівняння у вигляді логічного значення (True або False).




# Створіть програму, яка приймає від користувача строку та знаходить кількість слів у цьому рядку
# (слово — це послідовність символів, розділених пробілами). Виведіть цю кількість.
# string = "Створіть програму, яка приймає від користувача два рядки та виводить повідомлення, де більше символів."

# count = 1
# for char in string:
#     if char == " ":
#         count += 1

# print(count)



# Потрібно написати програму, що верифікує пароль
# Умовами верифікації є:
#  - довжина більше 6 символів;
#  - містить хоча б одну цифру, але не лише цифри;
#  - якщо пароль довший за 9 - попередня умова (про цифри) не вимагається;
#  - рядок не повинен містити слово "password" в жодному регістрі






# Створіть програму, яка приймає від користувача строку та знаходить кількість голосних літер у цьому рядку.
# Виведіть цю кількість.
# string = "Створіть програму, яка приймає від користувача два рядки та виводить повідомлення, де більше символів."
# vowels = ["а", "о", "у", "е", "і", "и"]
# count = 0
# for char in string:
#     if char in vowels:
#         count += 1
# count = sum([1 for char in string if char in vowels])
# print(count)



# перевірити, чи всі елементи вказані в списку є однаковими
# first_list = [1, 1, 2, 1, 5]
# second_list = ["b", "b", "b", "b", "b"]
# third_list = [5, 5, "5", 5, "5"]







# Створіть програму, яка приймає від користувача строку
# та знаходить кількість приголосних літер у цьому рядку.
# Виведіть цю кількість.




# Визначи, чи порядок значень у запропонованому списку є строго зростаючим
# my_list = [4, 5, 6, 7, 3, 7, 9]





# Створіть програму, яка приймає від користувача рядок і перевіряє чи є він паліндромом
# (слово, яке читається однаково зліва направо та справа наліво).
# Виведіть результат у вигляді логічного значення (True або False).
# string = "Око"
# string_reverse = string[::-1]
# print(string.lower() == string_reverse.lower())



# Даний список повинен бути "стиснутий" таким чином, щоб замість двох (або більше) однакових значень підряд було одне значення
# my_list = [5, 5, 5, 4, 5, 6, 6, 5, 5, 7, 8, 0, 0] # -> [5, 4, 5, 6, 5, 7, 8, 0]
# my_list = [1, 1, 1, 1, 2, 2, 2, 1, 1, 1] # -> [1, 2, 1]

# short_my_list = []

# for i, number in enumerate(my_list):
#     if i == 0:
#         short_my_list.append(number)
#         continue

#     if number != my_list[i-1]:
#         short_my_list.append(number)

# print(short_my_list)



# Створіть програму, яка приймає від користувача дві строки та перевіряє,
# чи є вони анаграмами (слова, у яких ті самі літери, але в різному порядку).
# Виведіть результат у вигляді логічного значення (True або False).
# string_1 = "Мамаа"
# string_2 = "Ааамам"
# print(sorted(string_1.lower()) == sorted(string_2.lower()))



# Тобі дано список з цілими числами. Твоя задача в цій місії - продублювати нулі
# my_list =  [100, 10, 0, 101, 1000] # -> [100, 10, 0, 0, 101, 1000]





# Створіть програму, яка приймає від користувача строку та знаходить найбільшу лексикографічно підпослідовність (послідовність символів, яка є підпослідовністю даної послідовності та має найбільше лексикографічне значення). Виведіть цю підпослідовність.
# Створіть програму, яка приймає від користувача строку та перетворює її у список, де кожен елемент — це слово зі строки. Виведіть цей список.
# Створіть програму, яка приймає від користувача дві строки та перетворює їх у список, де кожен елемент — це символ зі строки. Виведіть цей список.
# Створіть програму, яка приймає від користувача строку та знаходить кількість цифр у цій строці. Виведіть цю кількість.
